#!/bin/bash

apt-get update -y
apt-get install -y docker.io nginx amazon-cloudwatch-agent

# Optional: start writing to the application log
touch /var/log/application.log
chmod 644 /var/log/application.log
echo "Application started on $(date)" >> /var/log/application.log

cat > /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json <<EOF
{
  "agent": {
    "metrics_collection_interval": 60,
    "run_as_user": "root"
  },
  "logs": {
    "logs_collected": {
      "files": {
        "collect_list": [
          {
            "file_path": "/var/log/nginx/error.log",
            "log_group_name": "/aws/ec2/nginx-\${log_group_prefix}",
            "log_stream_name": "{instance_id}-error"
          },
          {
            "file_path": "/var/log/nginx/access.log",
            "log_group_name": "/aws/ec2/nginx-\${log_group_prefix}",
            "log_stream_name": "{instance_id}-access"
          },
          {
            "file_path": "/var/log/syslog",
            "log_group_name": "/aws/ec2/system-\${log_group_prefix}",
            "log_stream_name": "{instance_id}-syslog"
          },
          {
            "file_path": "/var/log/application.log",
            "log_group_name": "/aws/ec2/application-\${log_group_prefix}",
            "log_stream_name": "{instance_id}-app"
          }
        ]
      }
    }
  },
  "metrics": {
    "metrics_collected": {
      "cpu": {
        "measurement": ["cpu_usage_idle", "cpu_usage_user"],
        "metrics_collection_interval": 60
      },
      "mem": {
        "measurement": ["mem_used_percent"],
        "metrics_collection_interval": 60
      },
      "disk": {
        "resources": ["/"],
        "measurement": ["used_percent"],
        "metrics_collection_interval": 60
      }
    }
  }
}
EOF

# Replace this with your actual prefix or pass it via EC2 user_data variable
export log_group_prefix="myapp-prod"

# Start and enable services
systemctl start amazon-cloudwatch-agent docker nginx
systemctl enable amazon-cloudwatch-agent docker nginx
